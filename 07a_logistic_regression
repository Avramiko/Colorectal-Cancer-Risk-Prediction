# File: 07a_logistic_regression.py
import utils_06_5 as utils
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import classification_report
import joblib
import os

PROCESSED_DATA_DIR = "processed_data_manual"
MODEL_OUTPUT_DIR = "modeling_results"
os.makedirs(MODEL_OUTPUT_DIR, exist_ok=True)

model_path = os.path.join(MODEL_OUTPUT_DIR, "logistic_regression_model.joblib")
scaler_path = os.path.join(MODEL_OUTPUT_DIR, "lr_scaler.joblib")

# --- Load Data ---
X_train, y_train, X_val, y_val, X_test, y_test = utils.load_processed_data(PROCESSED_DATA_DIR)

# --- Scaling ---
scaler = StandardScaler()
scaler.fit(X_train)

X_train_scaled = scaler.transform(X_train)
X_val_scaled = scaler.transform(X_val)
X_test_scaled = scaler.transform(X_test)

joblib.dump(scaler, scaler_path)

# --- Train Model ---
log_reg_model = LogisticRegression(
    random_state=42,
    max_iter=1000,
    class_weight="balanced"
)
log_reg_model.fit(X_train_scaled, y_train)
joblib.dump(log_reg_model, model_path)

# --- Predictions (Validation) ---
y_val_pred = log_reg_model.predict(X_val_scaled)
y_val_pred_proba = log_reg_model.predict_proba(X_val_scaled)[:, 1]

# --- Evaluation ---
print(classification_report(y_val, y_val_pred))

MODEL_NAME = "Logistic Regression (Baseline)"
utils.plot_confusion_matrix_professional(y_val, y_val_pred, MODEL_NAME, MODEL_OUTPUT_DIR)
utils.plot_roc_curve(y_val, y_val_pred_proba, MODEL_NAME, MODEL_OUTPUT_DIR)
utils.plot_precision_recall_curve(y_val, y_val_pred_proba, MODEL_NAME, MODEL_OUTPUT_DIR)

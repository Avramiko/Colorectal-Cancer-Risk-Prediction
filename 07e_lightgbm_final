# File: 07e_lightgbm_final.py
import utils_06_5 as utils
import lightgbm as lgb
from sklearn.metrics import classification_report
import joblib
import os

PROCESSED_DATA_DIR = "processed_data_manual"
MODEL_OUTPUT_DIR = "modeling_results"
os.makedirs(MODEL_OUTPUT_DIR, exist_ok=True)
model_path = os.path.join(MODEL_OUTPUT_DIR, "lightgbm_final_tuned_model.joblib")

X_train, y_train, X_val, y_val, X_test, y_test = utils.load_processed_data(PROCESSED_DATA_DIR)

best_params = {
    "subsample": 0.9,
    "reg_lambda": 0,
    "reg_alpha": 0.1,
    "num_leaves": 20,
    "n_estimators": 200,
    "max_depth": -1,
    "learning_rate": 0.01,
    "colsample_bytree": 0.8,
}

count_neg = y_train.value_counts()[0]
count_pos = y_train.value_counts()[1]
scale_pos_weight_value = count_neg / count_pos

final_lgb_model = lgb.LGBMClassifier(
    objective="binary",
    metric="logloss",
    scale_pos_weight=scale_pos_weight_value,
    random_state=42,
    n_jobs=-1,
    **best_params
)

final_lgb_model.fit(X_train, y_train)
joblib.dump(final_lgb_model, model_path)

y_val_pred = final_lgb_model.predict(X_val)
y_val_pred_proba = final_lgb_model.predict_proba(X_val)[:, 1]

print("\nClassification Report:")
print(classification_report(y_val, y_val_pred))

MODEL_NAME = "LightGBM (Tuned)"
utils.plot_confusion_matrix_professional(y_val, y_val_pred, MODEL_NAME, MODEL_OUTPUT_DIR)
utils.plot_roc_curve(y_val, y_val_pred_proba, MODEL_NAME, MODEL_OUTPUT_DIR)
utils.plot_precision_recall_curve(y_val, y_val_pred_proba, MODEL_NAME, MODEL_OUTPUT_DIR)
